<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonImprimer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>