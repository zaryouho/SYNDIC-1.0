<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonImprimer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>