#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SYNDIC_1._0
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="syndic2")]
	public partial class DataClassesSyndicDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertville(ville instance);
    partial void Updateville(ville instance);
    partial void Deleteville(ville instance);
    partial void Insertbien(bien instance);
    partial void Updatebien(bien instance);
    partial void Deletebien(bien instance);
    partial void Insertbloc(bloc instance);
    partial void Updatebloc(bloc instance);
    partial void Deletebloc(bloc instance);
    partial void Insertconnexion(connexion instance);
    partial void Updateconnexion(connexion instance);
    partial void Deleteconnexion(connexion instance);
    partial void Insertcotisation(cotisation instance);
    partial void Updatecotisation(cotisation instance);
    partial void Deletecotisation(cotisation instance);
    partial void Insertcotisation_echeance(cotisation_echeance instance);
    partial void Updatecotisation_echeance(cotisation_echeance instance);
    partial void Deletecotisation_echeance(cotisation_echeance instance);
    partial void Insertdepense(depense instance);
    partial void Updatedepense(depense instance);
    partial void Deletedepense(depense instance);
    partial void InsertdocumentBien(documentBien instance);
    partial void UpdatedocumentBien(documentBien instance);
    partial void DeletedocumentBien(documentBien instance);
    partial void InsertdocumentCotisation(documentCotisation instance);
    partial void UpdatedocumentCotisation(documentCotisation instance);
    partial void DeletedocumentCotisation(documentCotisation instance);
    partial void InsertdocumentDepense(documentDepense instance);
    partial void UpdatedocumentDepense(documentDepense instance);
    partial void DeletedocumentDepense(documentDepense instance);
    partial void InsertdocumentEmploye(documentEmploye instance);
    partial void UpdatedocumentEmploye(documentEmploye instance);
    partial void DeletedocumentEmploye(documentEmploye instance);
    partial void InsertdocumentProprietaire(documentProprietaire instance);
    partial void UpdatedocumentProprietaire(documentProprietaire instance);
    partial void DeletedocumentProprietaire(documentProprietaire instance);
    partial void Insertecheance(echeance instance);
    partial void Updateecheance(echeance instance);
    partial void Deleteecheance(echeance instance);
    partial void Insertemploye(employe instance);
    partial void Updateemploye(employe instance);
    partial void Deleteemploye(employe instance);
    partial void Insertimmeuble(immeuble instance);
    partial void Updateimmeuble(immeuble instance);
    partial void Deleteimmeuble(immeuble instance);
    partial void Insertintervention(intervention instance);
    partial void Updateintervention(intervention instance);
    partial void Deleteintervention(intervention instance);
    partial void Insertjournal(journal instance);
    partial void Updatejournal(journal instance);
    partial void Deletejournal(journal instance);
    partial void Insertligne(ligne instance);
    partial void Updateligne(ligne instance);
    partial void Deleteligne(ligne instance);
    partial void Insertmessage(message instance);
    partial void Updatemessage(message instance);
    partial void Deletemessage(message instance);
    partial void Insertproduit(produit instance);
    partial void Updateproduit(produit instance);
    partial void Deleteproduit(produit instance);
    partial void Insertproprietaire(proprietaire instance);
    partial void Updateproprietaire(proprietaire instance);
    partial void Deleteproprietaire(proprietaire instance);
    partial void InsertProprietaireArchive(ProprietaireArchive instance);
    partial void UpdateProprietaireArchive(ProprietaireArchive instance);
    partial void DeleteProprietaireArchive(ProprietaireArchive instance);
    partial void InsertremarqueBien(remarqueBien instance);
    partial void UpdateremarqueBien(remarqueBien instance);
    partial void DeleteremarqueBien(remarqueBien instance);
    partial void InsertremarqueDepnse(remarqueDepnse instance);
    partial void UpdateremarqueDepnse(remarqueDepnse instance);
    partial void DeleteremarqueDepnse(remarqueDepnse instance);
    partial void InsertremarqueEmploye(remarqueEmploye instance);
    partial void UpdateremarqueEmploye(remarqueEmploye instance);
    partial void DeleteremarqueEmploye(remarqueEmploye instance);
    partial void Insertresidence(residence instance);
    partial void Updateresidence(residence instance);
    partial void Deleteresidence(residence instance);
    partial void Insertsociete(societe instance);
    partial void Updatesociete(societe instance);
    partial void Deletesociete(societe instance);
    partial void InsertTableType(TableType instance);
    partial void UpdateTableType(TableType instance);
    partial void DeleteTableType(TableType instance);
    partial void InsertTravail(Travail instance);
    partial void UpdateTravail(Travail instance);
    partial void DeleteTravail(Travail instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void Insertutilisateur(utilisateur instance);
    partial void Updateutilisateur(utilisateur instance);
    partial void Deleteutilisateur(utilisateur instance);
    #endregion
		
		public DataClassesSyndicDataContext() : 
				base(global::SYNDIC_1._0.Properties.Settings.Default.syndic2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSyndicDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSyndicDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSyndicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSyndicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ville> villes
		{
			get
			{
				return this.GetTable<ville>();
			}
		}
		
		public System.Data.Linq.Table<bien> biens
		{
			get
			{
				return this.GetTable<bien>();
			}
		}
		
		public System.Data.Linq.Table<bloc> blocs
		{
			get
			{
				return this.GetTable<bloc>();
			}
		}
		
		public System.Data.Linq.Table<connexion> connexions
		{
			get
			{
				return this.GetTable<connexion>();
			}
		}
		
		public System.Data.Linq.Table<cotisation> cotisations
		{
			get
			{
				return this.GetTable<cotisation>();
			}
		}
		
		public System.Data.Linq.Table<cotisation_echeance> cotisation_echeances
		{
			get
			{
				return this.GetTable<cotisation_echeance>();
			}
		}
		
		public System.Data.Linq.Table<depense> depenses
		{
			get
			{
				return this.GetTable<depense>();
			}
		}
		
		public System.Data.Linq.Table<documentBien> documentBiens
		{
			get
			{
				return this.GetTable<documentBien>();
			}
		}
		
		public System.Data.Linq.Table<documentCotisation> documentCotisations
		{
			get
			{
				return this.GetTable<documentCotisation>();
			}
		}
		
		public System.Data.Linq.Table<documentDepense> documentDepenses
		{
			get
			{
				return this.GetTable<documentDepense>();
			}
		}
		
		public System.Data.Linq.Table<documentEmploye> documentEmployes
		{
			get
			{
				return this.GetTable<documentEmploye>();
			}
		}
		
		public System.Data.Linq.Table<documentProprietaire> documentProprietaires
		{
			get
			{
				return this.GetTable<documentProprietaire>();
			}
		}
		
		public System.Data.Linq.Table<documentResidence> documentResidences
		{
			get
			{
				return this.GetTable<documentResidence>();
			}
		}
		
		public System.Data.Linq.Table<echeance> echeances
		{
			get
			{
				return this.GetTable<echeance>();
			}
		}
		
		public System.Data.Linq.Table<employe> employes
		{
			get
			{
				return this.GetTable<employe>();
			}
		}
		
		public System.Data.Linq.Table<immeuble> immeubles
		{
			get
			{
				return this.GetTable<immeuble>();
			}
		}
		
		public System.Data.Linq.Table<intervention> interventions
		{
			get
			{
				return this.GetTable<intervention>();
			}
		}
		
		public System.Data.Linq.Table<journal> journals
		{
			get
			{
				return this.GetTable<journal>();
			}
		}
		
		public System.Data.Linq.Table<ligne> lignes
		{
			get
			{
				return this.GetTable<ligne>();
			}
		}
		
		public System.Data.Linq.Table<message> messages
		{
			get
			{
				return this.GetTable<message>();
			}
		}
		
		public System.Data.Linq.Table<message_utilisateur> message_utilisateurs
		{
			get
			{
				return this.GetTable<message_utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<produit> produits
		{
			get
			{
				return this.GetTable<produit>();
			}
		}
		
		public System.Data.Linq.Table<proprietaire> proprietaires
		{
			get
			{
				return this.GetTable<proprietaire>();
			}
		}
		
		public System.Data.Linq.Table<ProprietaireArchive> ProprietaireArchives
		{
			get
			{
				return this.GetTable<ProprietaireArchive>();
			}
		}
		
		public System.Data.Linq.Table<remarqueBien> remarqueBiens
		{
			get
			{
				return this.GetTable<remarqueBien>();
			}
		}
		
		public System.Data.Linq.Table<remarqueDepnse> remarqueDepnses
		{
			get
			{
				return this.GetTable<remarqueDepnse>();
			}
		}
		
		public System.Data.Linq.Table<remarqueEmploye> remarqueEmployes
		{
			get
			{
				return this.GetTable<remarqueEmploye>();
			}
		}
		
		public System.Data.Linq.Table<residence> residences
		{
			get
			{
				return this.GetTable<residence>();
			}
		}
		
		public System.Data.Linq.Table<societe> societes
		{
			get
			{
				return this.GetTable<societe>();
			}
		}
		
		public System.Data.Linq.Table<TableType> TableTypes
		{
			get
			{
				return this.GetTable<TableType>();
			}
		}
		
		public System.Data.Linq.Table<Travail> Travails
		{
			get
			{
				return this.GetTable<Travail>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<utilisateur> utilisateurs
		{
			get
			{
				return this.GetTable<utilisateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ville")]
	public partial class ville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private EntitySet<employe> _employes;
		
		private EntitySet<proprietaire> _proprietaires;
		
		private EntitySet<residence> _residences;
		
		private EntitySet<societe> _societes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    #endregion
		
		public ville()
		{
			this._employes = new EntitySet<employe>(new Action<employe>(this.attach_employes), new Action<employe>(this.detach_employes));
			this._proprietaires = new EntitySet<proprietaire>(new Action<proprietaire>(this.attach_proprietaires), new Action<proprietaire>(this.detach_proprietaires));
			this._residences = new EntitySet<residence>(new Action<residence>(this.attach_residences), new Action<residence>(this.detach_residences));
			this._societes = new EntitySet<societe>(new Action<societe>(this.attach_societes), new Action<societe>(this.detach_societes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_employe", Storage="_employes", ThisKey="id", OtherKey="id_ville")]
		public EntitySet<employe> employes
		{
			get
			{
				return this._employes;
			}
			set
			{
				this._employes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_proprietaire", Storage="_proprietaires", ThisKey="id", OtherKey="id_ville")]
		public EntitySet<proprietaire> proprietaires
		{
			get
			{
				return this._proprietaires;
			}
			set
			{
				this._proprietaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_residence", Storage="_residences", ThisKey="id", OtherKey="id_ville")]
		public EntitySet<residence> residences
		{
			get
			{
				return this._residences;
			}
			set
			{
				this._residences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_societe", Storage="_societes", ThisKey="id", OtherKey="id_ville")]
		public EntitySet<societe> societes
		{
			get
			{
				return this._societes;
			}
			set
			{
				this._societes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employes(employe entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_employes(employe entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
		
		private void attach_proprietaires(proprietaire entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_proprietaires(proprietaire entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
		
		private void attach_residences(residence entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_residences(residence entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
		
		private void attach_societes(societe entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_societes(societe entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bien")]
	public partial class bien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private System.Nullable<int> _etage;
		
		private System.Nullable<double> _superficie;
		
		private System.Nullable<decimal> _charges;
		
		private string _typeBien;
		
		private System.Nullable<int> _id_immeuble;
		
		private System.Nullable<int> _id_proprietaire;
		
		private string _titre;
		
		private System.Nullable<System.DateTime> _dateAchat;
		
		private EntitySet<documentBien> _documentBiens;
		
		private EntitySet<echeance> _echeances;
		
		private EntitySet<remarqueBien> _remarqueBiens;
		
		private EntityRef<immeuble> _immeuble;
		
		private EntityRef<proprietaire> _proprietaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnetageChanging(System.Nullable<int> value);
    partial void OnetageChanged();
    partial void OnsuperficieChanging(System.Nullable<double> value);
    partial void OnsuperficieChanged();
    partial void OnchargesChanging(System.Nullable<decimal> value);
    partial void OnchargesChanged();
    partial void OntypeBienChanging(string value);
    partial void OntypeBienChanged();
    partial void Onid_immeubleChanging(System.Nullable<int> value);
    partial void Onid_immeubleChanged();
    partial void Onid_proprietaireChanging(System.Nullable<int> value);
    partial void Onid_proprietaireChanged();
    partial void OntitreChanging(string value);
    partial void OntitreChanged();
    partial void OndateAchatChanging(System.Nullable<System.DateTime> value);
    partial void OndateAchatChanged();
    #endregion
		
		public bien()
		{
			this._documentBiens = new EntitySet<documentBien>(new Action<documentBien>(this.attach_documentBiens), new Action<documentBien>(this.detach_documentBiens));
			this._echeances = new EntitySet<echeance>(new Action<echeance>(this.attach_echeances), new Action<echeance>(this.detach_echeances));
			this._remarqueBiens = new EntitySet<remarqueBien>(new Action<remarqueBien>(this.attach_remarqueBiens), new Action<remarqueBien>(this.detach_remarqueBiens));
			this._immeuble = default(EntityRef<immeuble>);
			this._proprietaire = default(EntityRef<proprietaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etage", DbType="Int")]
		public System.Nullable<int> etage
		{
			get
			{
				return this._etage;
			}
			set
			{
				if ((this._etage != value))
				{
					this.OnetageChanging(value);
					this.SendPropertyChanging();
					this._etage = value;
					this.SendPropertyChanged("etage");
					this.OnetageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superficie", DbType="Float")]
		public System.Nullable<double> superficie
		{
			get
			{
				return this._superficie;
			}
			set
			{
				if ((this._superficie != value))
				{
					this.OnsuperficieChanging(value);
					this.SendPropertyChanging();
					this._superficie = value;
					this.SendPropertyChanged("superficie");
					this.OnsuperficieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charges", DbType="Money")]
		public System.Nullable<decimal> charges
		{
			get
			{
				return this._charges;
			}
			set
			{
				if ((this._charges != value))
				{
					this.OnchargesChanging(value);
					this.SendPropertyChanging();
					this._charges = value;
					this.SendPropertyChanged("charges");
					this.OnchargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeBien", DbType="VarChar(50)")]
		public string typeBien
		{
			get
			{
				return this._typeBien;
			}
			set
			{
				if ((this._typeBien != value))
				{
					this.OntypeBienChanging(value);
					this.SendPropertyChanging();
					this._typeBien = value;
					this.SendPropertyChanged("typeBien");
					this.OntypeBienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_immeuble", DbType="Int")]
		public System.Nullable<int> id_immeuble
		{
			get
			{
				return this._id_immeuble;
			}
			set
			{
				if ((this._id_immeuble != value))
				{
					if (this._immeuble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_immeubleChanging(value);
					this.SendPropertyChanging();
					this._id_immeuble = value;
					this.SendPropertyChanged("id_immeuble");
					this.Onid_immeubleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_proprietaire", DbType="Int")]
		public System.Nullable<int> id_proprietaire
		{
			get
			{
				return this._id_proprietaire;
			}
			set
			{
				if ((this._id_proprietaire != value))
				{
					if (this._proprietaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_proprietaireChanging(value);
					this.SendPropertyChanging();
					this._id_proprietaire = value;
					this.SendPropertyChanged("id_proprietaire");
					this.Onid_proprietaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre", DbType="VarChar(150)")]
		public string titre
		{
			get
			{
				return this._titre;
			}
			set
			{
				if ((this._titre != value))
				{
					this.OntitreChanging(value);
					this.SendPropertyChanging();
					this._titre = value;
					this.SendPropertyChanged("titre");
					this.OntitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAchat", DbType="Date")]
		public System.Nullable<System.DateTime> dateAchat
		{
			get
			{
				return this._dateAchat;
			}
			set
			{
				if ((this._dateAchat != value))
				{
					this.OndateAchatChanging(value);
					this.SendPropertyChanging();
					this._dateAchat = value;
					this.SendPropertyChanged("dateAchat");
					this.OndateAchatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_documentBien", Storage="_documentBiens", ThisKey="id", OtherKey="id_bien")]
		public EntitySet<documentBien> documentBiens
		{
			get
			{
				return this._documentBiens;
			}
			set
			{
				this._documentBiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_echeance", Storage="_echeances", ThisKey="id", OtherKey="id_bien")]
		public EntitySet<echeance> echeances
		{
			get
			{
				return this._echeances;
			}
			set
			{
				this._echeances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_remarqueBien", Storage="_remarqueBiens", ThisKey="id", OtherKey="id_Bien")]
		public EntitySet<remarqueBien> remarqueBiens
		{
			get
			{
				return this._remarqueBiens;
			}
			set
			{
				this._remarqueBiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="immeuble_bien", Storage="_immeuble", ThisKey="id_immeuble", OtherKey="id", IsForeignKey=true)]
		public immeuble immeuble
		{
			get
			{
				return this._immeuble.Entity;
			}
			set
			{
				immeuble previousValue = this._immeuble.Entity;
				if (((previousValue != value) 
							|| (this._immeuble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._immeuble.Entity = null;
						previousValue.biens.Remove(this);
					}
					this._immeuble.Entity = value;
					if ((value != null))
					{
						value.biens.Add(this);
						this._id_immeuble = value.id;
					}
					else
					{
						this._id_immeuble = default(Nullable<int>);
					}
					this.SendPropertyChanged("immeuble");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_bien", Storage="_proprietaire", ThisKey="id_proprietaire", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public proprietaire proprietaire
		{
			get
			{
				return this._proprietaire.Entity;
			}
			set
			{
				proprietaire previousValue = this._proprietaire.Entity;
				if (((previousValue != value) 
							|| (this._proprietaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._proprietaire.Entity = null;
						previousValue.biens.Remove(this);
					}
					this._proprietaire.Entity = value;
					if ((value != null))
					{
						value.biens.Add(this);
						this._id_proprietaire = value.id;
					}
					else
					{
						this._id_proprietaire = default(Nullable<int>);
					}
					this.SendPropertyChanged("proprietaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_documentBiens(documentBien entity)
		{
			this.SendPropertyChanging();
			entity.bien = this;
		}
		
		private void detach_documentBiens(documentBien entity)
		{
			this.SendPropertyChanging();
			entity.bien = null;
		}
		
		private void attach_echeances(echeance entity)
		{
			this.SendPropertyChanging();
			entity.bien = this;
		}
		
		private void detach_echeances(echeance entity)
		{
			this.SendPropertyChanging();
			entity.bien = null;
		}
		
		private void attach_remarqueBiens(remarqueBien entity)
		{
			this.SendPropertyChanging();
			entity.bien = this;
		}
		
		private void detach_remarqueBiens(remarqueBien entity)
		{
			this.SendPropertyChanging();
			entity.bien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bloc")]
	public partial class bloc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nomBloc;
		
		private System.Nullable<int> _id_Residence;
		
		private EntitySet<immeuble> _immeubles;
		
		private EntityRef<residence> _residence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomBlocChanging(string value);
    partial void OnnomBlocChanged();
    partial void Onid_ResidenceChanging(System.Nullable<int> value);
    partial void Onid_ResidenceChanged();
    #endregion
		
		public bloc()
		{
			this._immeubles = new EntitySet<immeuble>(new Action<immeuble>(this.attach_immeubles), new Action<immeuble>(this.detach_immeubles));
			this._residence = default(EntityRef<residence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomBloc", DbType="VarChar(150)")]
		public string nomBloc
		{
			get
			{
				return this._nomBloc;
			}
			set
			{
				if ((this._nomBloc != value))
				{
					this.OnnomBlocChanging(value);
					this.SendPropertyChanging();
					this._nomBloc = value;
					this.SendPropertyChanged("nomBloc");
					this.OnnomBlocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Residence", DbType="Int")]
		public System.Nullable<int> id_Residence
		{
			get
			{
				return this._id_Residence;
			}
			set
			{
				if ((this._id_Residence != value))
				{
					if (this._residence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ResidenceChanging(value);
					this.SendPropertyChanging();
					this._id_Residence = value;
					this.SendPropertyChanged("id_Residence");
					this.Onid_ResidenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bloc_immeuble", Storage="_immeubles", ThisKey="id", OtherKey="id_bloc")]
		public EntitySet<immeuble> immeubles
		{
			get
			{
				return this._immeubles;
			}
			set
			{
				this._immeubles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="residence_bloc", Storage="_residence", ThisKey="id_Residence", OtherKey="id", IsForeignKey=true)]
		public residence residence
		{
			get
			{
				return this._residence.Entity;
			}
			set
			{
				residence previousValue = this._residence.Entity;
				if (((previousValue != value) 
							|| (this._residence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._residence.Entity = null;
						previousValue.blocs.Remove(this);
					}
					this._residence.Entity = value;
					if ((value != null))
					{
						value.blocs.Add(this);
						this._id_Residence = value.id;
					}
					else
					{
						this._id_Residence = default(Nullable<int>);
					}
					this.SendPropertyChanged("residence");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_immeubles(immeuble entity)
		{
			this.SendPropertyChanging();
			entity.bloc = this;
		}
		
		private void detach_immeubles(immeuble entity)
		{
			this.SendPropertyChanging();
			entity.bloc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.connexion")]
	public partial class connexion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date_connexion;
		
		private System.Nullable<int> _id_utilisateur;
		
		private EntityRef<utilisateur> _utilisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondate_connexionChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_connexionChanged();
    partial void Onid_utilisateurChanging(System.Nullable<int> value);
    partial void Onid_utilisateurChanged();
    #endregion
		
		public connexion()
		{
			this._utilisateur = default(EntityRef<utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_connexion", DbType="Date")]
		public System.Nullable<System.DateTime> date_connexion
		{
			get
			{
				return this._date_connexion;
			}
			set
			{
				if ((this._date_connexion != value))
				{
					this.Ondate_connexionChanging(value);
					this.SendPropertyChanging();
					this._date_connexion = value;
					this.SendPropertyChanged("date_connexion");
					this.Ondate_connexionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilisateur", DbType="Int")]
		public System.Nullable<int> id_utilisateur
		{
			get
			{
				return this._id_utilisateur;
			}
			set
			{
				if ((this._id_utilisateur != value))
				{
					if (this._utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_utilisateurChanging(value);
					this.SendPropertyChanging();
					this._id_utilisateur = value;
					this.SendPropertyChanged("id_utilisateur");
					this.Onid_utilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_connexion", Storage="_utilisateur", ThisKey="id_utilisateur", OtherKey="id", IsForeignKey=true)]
		public utilisateur utilisateur
		{
			get
			{
				return this._utilisateur.Entity;
			}
			set
			{
				utilisateur previousValue = this._utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utilisateur.Entity = null;
						previousValue.connexions.Remove(this);
					}
					this._utilisateur.Entity = value;
					if ((value != null))
					{
						value.connexions.Add(this);
						this._id_utilisateur = value.id;
					}
					else
					{
						this._id_utilisateur = default(Nullable<int>);
					}
					this.SendPropertyChanged("utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cotisation")]
	public partial class cotisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date_recette;
		
		private System.Nullable<decimal> _montant;
		
		private string _documante;
		
		private string _typeRecette;
		
		private System.Nullable<int> _id_propietaire;
		
		private System.Nullable<int> _numRecu;
		
		private EntitySet<cotisation_echeance> _cotisation_echeances;
		
		private EntitySet<documentCotisation> _documentCotisations;
		
		private EntityRef<proprietaire> _proprietaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondate_recetteChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_recetteChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    partial void OndocumanteChanging(string value);
    partial void OndocumanteChanged();
    partial void OntypeRecetteChanging(string value);
    partial void OntypeRecetteChanged();
    partial void Onid_propietaireChanging(System.Nullable<int> value);
    partial void Onid_propietaireChanged();
    partial void OnnumRecuChanging(System.Nullable<int> value);
    partial void OnnumRecuChanged();
    #endregion
		
		public cotisation()
		{
			this._cotisation_echeances = new EntitySet<cotisation_echeance>(new Action<cotisation_echeance>(this.attach_cotisation_echeances), new Action<cotisation_echeance>(this.detach_cotisation_echeances));
			this._documentCotisations = new EntitySet<documentCotisation>(new Action<documentCotisation>(this.attach_documentCotisations), new Action<documentCotisation>(this.detach_documentCotisations));
			this._proprietaire = default(EntityRef<proprietaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_recette", DbType="Date")]
		public System.Nullable<System.DateTime> date_recette
		{
			get
			{
				return this._date_recette;
			}
			set
			{
				if ((this._date_recette != value))
				{
					this.Ondate_recetteChanging(value);
					this.SendPropertyChanging();
					this._date_recette = value;
					this.SendPropertyChanged("date_recette");
					this.Ondate_recetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Money")]
		public System.Nullable<decimal> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documante", DbType="VarChar(50)")]
		public string documante
		{
			get
			{
				return this._documante;
			}
			set
			{
				if ((this._documante != value))
				{
					this.OndocumanteChanging(value);
					this.SendPropertyChanging();
					this._documante = value;
					this.SendPropertyChanged("documante");
					this.OndocumanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeRecette", DbType="VarChar(MAX)")]
		public string typeRecette
		{
			get
			{
				return this._typeRecette;
			}
			set
			{
				if ((this._typeRecette != value))
				{
					this.OntypeRecetteChanging(value);
					this.SendPropertyChanging();
					this._typeRecette = value;
					this.SendPropertyChanged("typeRecette");
					this.OntypeRecetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_propietaire", DbType="Int")]
		public System.Nullable<int> id_propietaire
		{
			get
			{
				return this._id_propietaire;
			}
			set
			{
				if ((this._id_propietaire != value))
				{
					if (this._proprietaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_propietaireChanging(value);
					this.SendPropertyChanging();
					this._id_propietaire = value;
					this.SendPropertyChanged("id_propietaire");
					this.Onid_propietaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numRecu", DbType="Int")]
		public System.Nullable<int> numRecu
		{
			get
			{
				return this._numRecu;
			}
			set
			{
				if ((this._numRecu != value))
				{
					this.OnnumRecuChanging(value);
					this.SendPropertyChanging();
					this._numRecu = value;
					this.SendPropertyChanged("numRecu");
					this.OnnumRecuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cotisation_cotisation_echeance", Storage="_cotisation_echeances", ThisKey="id", OtherKey="id_recette")]
		public EntitySet<cotisation_echeance> cotisation_echeances
		{
			get
			{
				return this._cotisation_echeances;
			}
			set
			{
				this._cotisation_echeances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cotisation_documentCotisation", Storage="_documentCotisations", ThisKey="id", OtherKey="idRecette")]
		public EntitySet<documentCotisation> documentCotisations
		{
			get
			{
				return this._documentCotisations;
			}
			set
			{
				this._documentCotisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_cotisation", Storage="_proprietaire", ThisKey="id_propietaire", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public proprietaire proprietaire
		{
			get
			{
				return this._proprietaire.Entity;
			}
			set
			{
				proprietaire previousValue = this._proprietaire.Entity;
				if (((previousValue != value) 
							|| (this._proprietaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._proprietaire.Entity = null;
						previousValue.cotisations.Remove(this);
					}
					this._proprietaire.Entity = value;
					if ((value != null))
					{
						value.cotisations.Add(this);
						this._id_propietaire = value.id;
					}
					else
					{
						this._id_propietaire = default(Nullable<int>);
					}
					this.SendPropertyChanged("proprietaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cotisation_echeances(cotisation_echeance entity)
		{
			this.SendPropertyChanging();
			entity.cotisation = this;
		}
		
		private void detach_cotisation_echeances(cotisation_echeance entity)
		{
			this.SendPropertyChanging();
			entity.cotisation = null;
		}
		
		private void attach_documentCotisations(documentCotisation entity)
		{
			this.SendPropertyChanging();
			entity.cotisation = this;
		}
		
		private void detach_documentCotisations(documentCotisation entity)
		{
			this.SendPropertyChanging();
			entity.cotisation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cotisation_echeance")]
	public partial class cotisation_echeance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_recette;
		
		private int _id_echeance;
		
		private EntityRef<cotisation> _cotisation;
		
		private EntityRef<echeance> _echeance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_recetteChanging(int value);
    partial void Onid_recetteChanged();
    partial void Onid_echeanceChanging(int value);
    partial void Onid_echeanceChanged();
    #endregion
		
		public cotisation_echeance()
		{
			this._cotisation = default(EntityRef<cotisation>);
			this._echeance = default(EntityRef<echeance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_recette", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_recette
		{
			get
			{
				return this._id_recette;
			}
			set
			{
				if ((this._id_recette != value))
				{
					if (this._cotisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_recetteChanging(value);
					this.SendPropertyChanging();
					this._id_recette = value;
					this.SendPropertyChanged("id_recette");
					this.Onid_recetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_echeance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_echeance
		{
			get
			{
				return this._id_echeance;
			}
			set
			{
				if ((this._id_echeance != value))
				{
					if (this._echeance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_echeanceChanging(value);
					this.SendPropertyChanging();
					this._id_echeance = value;
					this.SendPropertyChanged("id_echeance");
					this.Onid_echeanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cotisation_cotisation_echeance", Storage="_cotisation", ThisKey="id_recette", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cotisation cotisation
		{
			get
			{
				return this._cotisation.Entity;
			}
			set
			{
				cotisation previousValue = this._cotisation.Entity;
				if (((previousValue != value) 
							|| (this._cotisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cotisation.Entity = null;
						previousValue.cotisation_echeances.Remove(this);
					}
					this._cotisation.Entity = value;
					if ((value != null))
					{
						value.cotisation_echeances.Add(this);
						this._id_recette = value.id;
					}
					else
					{
						this._id_recette = default(int);
					}
					this.SendPropertyChanged("cotisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="echeance_cotisation_echeance", Storage="_echeance", ThisKey="id_echeance", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public echeance echeance
		{
			get
			{
				return this._echeance.Entity;
			}
			set
			{
				echeance previousValue = this._echeance.Entity;
				if (((previousValue != value) 
							|| (this._echeance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._echeance.Entity = null;
						previousValue.cotisation_echeances.Remove(this);
					}
					this._echeance.Entity = value;
					if ((value != null))
					{
						value.cotisation_echeances.Add(this);
						this._id_echeance = value.id;
					}
					else
					{
						this._id_echeance = default(int);
					}
					this.SendPropertyChanged("echeance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.depense")]
	public partial class depense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _designation;
		
		private System.Nullable<System.DateTime> _date_depense;
		
		private System.Nullable<decimal> _montant;
		
		private System.Nullable<int> _id_employe;
		
		private System.Nullable<int> _id_entreprise;
		
		private string _typeDepense;
		
		private System.Nullable<int> _numDocument;
		
		private string _typeDocument;
		
		private EntitySet<documentDepense> _documentDepenses;
		
		private EntitySet<intervention> _interventions;
		
		private EntitySet<ligne> _lignes;
		
		private EntitySet<remarqueDepnse> _remarqueDepnses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void Ondate_depenseChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_depenseChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    partial void Onid_employeChanging(System.Nullable<int> value);
    partial void Onid_employeChanged();
    partial void Onid_entrepriseChanging(System.Nullable<int> value);
    partial void Onid_entrepriseChanged();
    partial void OntypeDepenseChanging(string value);
    partial void OntypeDepenseChanged();
    partial void OnnumDocumentChanging(System.Nullable<int> value);
    partial void OnnumDocumentChanged();
    partial void OntypeDocumentChanging(string value);
    partial void OntypeDocumentChanged();
    #endregion
		
		public depense()
		{
			this._documentDepenses = new EntitySet<documentDepense>(new Action<documentDepense>(this.attach_documentDepenses), new Action<documentDepense>(this.detach_documentDepenses));
			this._interventions = new EntitySet<intervention>(new Action<intervention>(this.attach_interventions), new Action<intervention>(this.detach_interventions));
			this._lignes = new EntitySet<ligne>(new Action<ligne>(this.attach_lignes), new Action<ligne>(this.detach_lignes));
			this._remarqueDepnses = new EntitySet<remarqueDepnse>(new Action<remarqueDepnse>(this.attach_remarqueDepnses), new Action<remarqueDepnse>(this.detach_remarqueDepnses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_depense", DbType="Date")]
		public System.Nullable<System.DateTime> date_depense
		{
			get
			{
				return this._date_depense;
			}
			set
			{
				if ((this._date_depense != value))
				{
					this.Ondate_depenseChanging(value);
					this.SendPropertyChanging();
					this._date_depense = value;
					this.SendPropertyChanged("date_depense");
					this.Ondate_depenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Money")]
		public System.Nullable<decimal> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employe", DbType="Int")]
		public System.Nullable<int> id_employe
		{
			get
			{
				return this._id_employe;
			}
			set
			{
				if ((this._id_employe != value))
				{
					this.Onid_employeChanging(value);
					this.SendPropertyChanging();
					this._id_employe = value;
					this.SendPropertyChanged("id_employe");
					this.Onid_employeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_entreprise", DbType="Int")]
		public System.Nullable<int> id_entreprise
		{
			get
			{
				return this._id_entreprise;
			}
			set
			{
				if ((this._id_entreprise != value))
				{
					this.Onid_entrepriseChanging(value);
					this.SendPropertyChanging();
					this._id_entreprise = value;
					this.SendPropertyChanged("id_entreprise");
					this.Onid_entrepriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeDepense", DbType="VarChar(50)")]
		public string typeDepense
		{
			get
			{
				return this._typeDepense;
			}
			set
			{
				if ((this._typeDepense != value))
				{
					this.OntypeDepenseChanging(value);
					this.SendPropertyChanging();
					this._typeDepense = value;
					this.SendPropertyChanged("typeDepense");
					this.OntypeDepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numDocument", DbType="Int")]
		public System.Nullable<int> numDocument
		{
			get
			{
				return this._numDocument;
			}
			set
			{
				if ((this._numDocument != value))
				{
					this.OnnumDocumentChanging(value);
					this.SendPropertyChanging();
					this._numDocument = value;
					this.SendPropertyChanged("numDocument");
					this.OnnumDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeDocument", DbType="VarChar(150)")]
		public string typeDocument
		{
			get
			{
				return this._typeDocument;
			}
			set
			{
				if ((this._typeDocument != value))
				{
					this.OntypeDocumentChanging(value);
					this.SendPropertyChanging();
					this._typeDocument = value;
					this.SendPropertyChanged("typeDocument");
					this.OntypeDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_documentDepense", Storage="_documentDepenses", ThisKey="id", OtherKey="id_Depense")]
		public EntitySet<documentDepense> documentDepenses
		{
			get
			{
				return this._documentDepenses;
			}
			set
			{
				this._documentDepenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_intervention", Storage="_interventions", ThisKey="id", OtherKey="id_depense")]
		public EntitySet<intervention> interventions
		{
			get
			{
				return this._interventions;
			}
			set
			{
				this._interventions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_ligne", Storage="_lignes", ThisKey="id", OtherKey="id_depense")]
		public EntitySet<ligne> lignes
		{
			get
			{
				return this._lignes;
			}
			set
			{
				this._lignes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_remarqueDepnse", Storage="_remarqueDepnses", ThisKey="id", OtherKey="id_Depense")]
		public EntitySet<remarqueDepnse> remarqueDepnses
		{
			get
			{
				return this._remarqueDepnses;
			}
			set
			{
				this._remarqueDepnses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_documentDepenses(documentDepense entity)
		{
			this.SendPropertyChanging();
			entity.depense = this;
		}
		
		private void detach_documentDepenses(documentDepense entity)
		{
			this.SendPropertyChanging();
			entity.depense = null;
		}
		
		private void attach_interventions(intervention entity)
		{
			this.SendPropertyChanging();
			entity.depense = this;
		}
		
		private void detach_interventions(intervention entity)
		{
			this.SendPropertyChanging();
			entity.depense = null;
		}
		
		private void attach_lignes(ligne entity)
		{
			this.SendPropertyChanging();
			entity.depense = this;
		}
		
		private void detach_lignes(ligne entity)
		{
			this.SendPropertyChanging();
			entity.depense = null;
		}
		
		private void attach_remarqueDepnses(remarqueDepnse entity)
		{
			this.SendPropertyChanging();
			entity.depense = this;
		}
		
		private void detach_remarqueDepnses(remarqueDepnse entity)
		{
			this.SendPropertyChanging();
			entity.depense = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentBien")]
	public partial class documentBien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _fichier;
		
		private System.Nullable<int> _id_bien;
		
		private EntityRef<bien> _bien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void Onid_bienChanging(System.Nullable<int> value);
    partial void Onid_bienChanged();
    #endregion
		
		public documentBien()
		{
			this._bien = default(EntityRef<bien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bien", DbType="Int")]
		public System.Nullable<int> id_bien
		{
			get
			{
				return this._id_bien;
			}
			set
			{
				if ((this._id_bien != value))
				{
					if (this._bien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bienChanging(value);
					this.SendPropertyChanging();
					this._id_bien = value;
					this.SendPropertyChanged("id_bien");
					this.Onid_bienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_documentBien", Storage="_bien", ThisKey="id_bien", OtherKey="id", IsForeignKey=true)]
		public bien bien
		{
			get
			{
				return this._bien.Entity;
			}
			set
			{
				bien previousValue = this._bien.Entity;
				if (((previousValue != value) 
							|| (this._bien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bien.Entity = null;
						previousValue.documentBiens.Remove(this);
					}
					this._bien.Entity = value;
					if ((value != null))
					{
						value.documentBiens.Add(this);
						this._id_bien = value.id;
					}
					else
					{
						this._id_bien = default(Nullable<int>);
					}
					this.SendPropertyChanged("bien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentCotisation")]
	public partial class documentCotisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idRecette;
		
		private string _fichier;
		
		private string _nom;
		
		private EntityRef<cotisation> _cotisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidRecetteChanging(System.Nullable<int> value);
    partial void OnidRecetteChanged();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    #endregion
		
		public documentCotisation()
		{
			this._cotisation = default(EntityRef<cotisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecette", DbType="Int")]
		public System.Nullable<int> idRecette
		{
			get
			{
				return this._idRecette;
			}
			set
			{
				if ((this._idRecette != value))
				{
					if (this._cotisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRecetteChanging(value);
					this.SendPropertyChanging();
					this._idRecette = value;
					this.SendPropertyChanged("idRecette");
					this.OnidRecetteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cotisation_documentCotisation", Storage="_cotisation", ThisKey="idRecette", OtherKey="id", IsForeignKey=true)]
		public cotisation cotisation
		{
			get
			{
				return this._cotisation.Entity;
			}
			set
			{
				cotisation previousValue = this._cotisation.Entity;
				if (((previousValue != value) 
							|| (this._cotisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cotisation.Entity = null;
						previousValue.documentCotisations.Remove(this);
					}
					this._cotisation.Entity = value;
					if ((value != null))
					{
						value.documentCotisations.Add(this);
						this._idRecette = value.id;
					}
					else
					{
						this._idRecette = default(Nullable<int>);
					}
					this.SendPropertyChanged("cotisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentDepense")]
	public partial class documentDepense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _fichier;
		
		private System.Nullable<int> _id_Depense;
		
		private EntityRef<depense> _depense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void Onid_DepenseChanging(System.Nullable<int> value);
    partial void Onid_DepenseChanged();
    #endregion
		
		public documentDepense()
		{
			this._depense = default(EntityRef<depense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Depense", DbType="Int")]
		public System.Nullable<int> id_Depense
		{
			get
			{
				return this._id_Depense;
			}
			set
			{
				if ((this._id_Depense != value))
				{
					if (this._depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DepenseChanging(value);
					this.SendPropertyChanging();
					this._id_Depense = value;
					this.SendPropertyChanged("id_Depense");
					this.Onid_DepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_documentDepense", Storage="_depense", ThisKey="id_Depense", OtherKey="id", IsForeignKey=true)]
		public depense depense
		{
			get
			{
				return this._depense.Entity;
			}
			set
			{
				depense previousValue = this._depense.Entity;
				if (((previousValue != value) 
							|| (this._depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._depense.Entity = null;
						previousValue.documentDepenses.Remove(this);
					}
					this._depense.Entity = value;
					if ((value != null))
					{
						value.documentDepenses.Add(this);
						this._id_Depense = value.id;
					}
					else
					{
						this._id_Depense = default(Nullable<int>);
					}
					this.SendPropertyChanged("depense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentEmploye")]
	public partial class documentEmploye : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _fichier;
		
		private System.Nullable<int> _id_employe;
		
		private EntityRef<employe> _employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void Onid_employeChanging(System.Nullable<int> value);
    partial void Onid_employeChanged();
    #endregion
		
		public documentEmploye()
		{
			this._employe = default(EntityRef<employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employe", DbType="Int")]
		public System.Nullable<int> id_employe
		{
			get
			{
				return this._id_employe;
			}
			set
			{
				if ((this._id_employe != value))
				{
					if (this._employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeChanging(value);
					this.SendPropertyChanging();
					this._id_employe = value;
					this.SendPropertyChanged("id_employe");
					this.Onid_employeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_documentEmploye", Storage="_employe", ThisKey="id_employe", OtherKey="id", IsForeignKey=true)]
		public employe employe
		{
			get
			{
				return this._employe.Entity;
			}
			set
			{
				employe previousValue = this._employe.Entity;
				if (((previousValue != value) 
							|| (this._employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employe.Entity = null;
						previousValue.documentEmployes.Remove(this);
					}
					this._employe.Entity = value;
					if ((value != null))
					{
						value.documentEmployes.Add(this);
						this._id_employe = value.id;
					}
					else
					{
						this._id_employe = default(Nullable<int>);
					}
					this.SendPropertyChanged("employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentProprietaire")]
	public partial class documentProprietaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _fichier;
		
		private System.Nullable<int> _id_Proprietaire;
		
		private EntityRef<proprietaire> _proprietaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void Onid_ProprietaireChanging(System.Nullable<int> value);
    partial void Onid_ProprietaireChanged();
    #endregion
		
		public documentProprietaire()
		{
			this._proprietaire = default(EntityRef<proprietaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Proprietaire", DbType="Int")]
		public System.Nullable<int> id_Proprietaire
		{
			get
			{
				return this._id_Proprietaire;
			}
			set
			{
				if ((this._id_Proprietaire != value))
				{
					if (this._proprietaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ProprietaireChanging(value);
					this.SendPropertyChanging();
					this._id_Proprietaire = value;
					this.SendPropertyChanged("id_Proprietaire");
					this.Onid_ProprietaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_documentProprietaire", Storage="_proprietaire", ThisKey="id_Proprietaire", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public proprietaire proprietaire
		{
			get
			{
				return this._proprietaire.Entity;
			}
			set
			{
				proprietaire previousValue = this._proprietaire.Entity;
				if (((previousValue != value) 
							|| (this._proprietaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._proprietaire.Entity = null;
						previousValue.documentProprietaires.Remove(this);
					}
					this._proprietaire.Entity = value;
					if ((value != null))
					{
						value.documentProprietaires.Add(this);
						this._id_Proprietaire = value.id;
					}
					else
					{
						this._id_Proprietaire = default(Nullable<int>);
					}
					this.SendPropertyChanged("proprietaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documentResidence")]
	public partial class documentResidence
	{
		
		private System.Nullable<int> _id;
		
		private string _nom;
		
		private string _fichier;
		
		private System.Nullable<int> _id_Residence;
		
		public documentResidence()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this._nom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(150)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this._fichier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Residence", DbType="Int")]
		public System.Nullable<int> id_Residence
		{
			get
			{
				return this._id_Residence;
			}
			set
			{
				if ((this._id_Residence != value))
				{
					this._id_Residence = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.echeance")]
	public partial class echeance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _mois;
		
		private System.Nullable<int> _annee;
		
		private decimal _montant;
		
		private System.Nullable<decimal> _montant_reçu;
		
		private System.Nullable<int> _id_bien;
		
		private string _typeEchea;
		
		private EntitySet<cotisation_echeance> _cotisation_echeances;
		
		private EntityRef<bien> _bien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmoisChanging(System.Nullable<int> value);
    partial void OnmoisChanged();
    partial void OnanneeChanging(System.Nullable<int> value);
    partial void OnanneeChanged();
    partial void OnmontantChanging(decimal value);
    partial void OnmontantChanged();
    partial void Onmontant_reçuChanging(System.Nullable<decimal> value);
    partial void Onmontant_reçuChanged();
    partial void Onid_bienChanging(System.Nullable<int> value);
    partial void Onid_bienChanged();
    partial void OntypeEcheaChanging(string value);
    partial void OntypeEcheaChanged();
    #endregion
		
		public echeance()
		{
			this._cotisation_echeances = new EntitySet<cotisation_echeance>(new Action<cotisation_echeance>(this.attach_cotisation_echeances), new Action<cotisation_echeance>(this.detach_cotisation_echeances));
			this._bien = default(EntityRef<bien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mois", DbType="Int")]
		public System.Nullable<int> mois
		{
			get
			{
				return this._mois;
			}
			set
			{
				if ((this._mois != value))
				{
					this.OnmoisChanging(value);
					this.SendPropertyChanging();
					this._mois = value;
					this.SendPropertyChanged("mois");
					this.OnmoisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annee", DbType="Int")]
		public System.Nullable<int> annee
		{
			get
			{
				return this._annee;
			}
			set
			{
				if ((this._annee != value))
				{
					this.OnanneeChanging(value);
					this.SendPropertyChanging();
					this._annee = value;
					this.SendPropertyChanged("annee");
					this.OnanneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Money NOT NULL")]
		public decimal montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant_reçu", DbType="Money")]
		public System.Nullable<decimal> montant_reçu
		{
			get
			{
				return this._montant_reçu;
			}
			set
			{
				if ((this._montant_reçu != value))
				{
					this.Onmontant_reçuChanging(value);
					this.SendPropertyChanging();
					this._montant_reçu = value;
					this.SendPropertyChanged("montant_reçu");
					this.Onmontant_reçuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bien", DbType="Int")]
		public System.Nullable<int> id_bien
		{
			get
			{
				return this._id_bien;
			}
			set
			{
				if ((this._id_bien != value))
				{
					if (this._bien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bienChanging(value);
					this.SendPropertyChanging();
					this._id_bien = value;
					this.SendPropertyChanged("id_bien");
					this.Onid_bienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeEchea", DbType="VarChar(150)")]
		public string typeEchea
		{
			get
			{
				return this._typeEchea;
			}
			set
			{
				if ((this._typeEchea != value))
				{
					this.OntypeEcheaChanging(value);
					this.SendPropertyChanging();
					this._typeEchea = value;
					this.SendPropertyChanged("typeEchea");
					this.OntypeEcheaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="echeance_cotisation_echeance", Storage="_cotisation_echeances", ThisKey="id", OtherKey="id_echeance")]
		public EntitySet<cotisation_echeance> cotisation_echeances
		{
			get
			{
				return this._cotisation_echeances;
			}
			set
			{
				this._cotisation_echeances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_echeance", Storage="_bien", ThisKey="id_bien", OtherKey="id", IsForeignKey=true)]
		public bien bien
		{
			get
			{
				return this._bien.Entity;
			}
			set
			{
				bien previousValue = this._bien.Entity;
				if (((previousValue != value) 
							|| (this._bien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bien.Entity = null;
						previousValue.echeances.Remove(this);
					}
					this._bien.Entity = value;
					if ((value != null))
					{
						value.echeances.Add(this);
						this._id_bien = value.id;
					}
					else
					{
						this._id_bien = default(Nullable<int>);
					}
					this.SendPropertyChanged("bien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cotisation_echeances(cotisation_echeance entity)
		{
			this.SendPropertyChanging();
			entity.echeance = this;
		}
		
		private void detach_cotisation_echeances(cotisation_echeance entity)
		{
			this.SendPropertyChanging();
			entity.echeance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employe")]
	public partial class employe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _adresse;
		
		private System.Nullable<int> _code_postal;
		
		private string _tel;
		
		private string _email;
		
		private System.Nullable<System.DateTime> _date_recrutement;
		
		private System.Nullable<bool> _actif;
		
		private System.Nullable<System.DateTime> _date_depart;
		
		private string _typeEmploye;
		
		private System.Nullable<int> _id_ville;
		
		private EntitySet<documentEmploye> _documentEmployes;
		
		private EntitySet<remarqueEmploye> _remarqueEmployes;
		
		private EntitySet<Travail> _Travails;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void Oncode_postalChanging(System.Nullable<int> value);
    partial void Oncode_postalChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Ondate_recrutementChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_recrutementChanged();
    partial void OnactifChanging(System.Nullable<bool> value);
    partial void OnactifChanged();
    partial void Ondate_departChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_departChanged();
    partial void OntypeEmployeChanging(string value);
    partial void OntypeEmployeChanged();
    partial void Onid_villeChanging(System.Nullable<int> value);
    partial void Onid_villeChanged();
    #endregion
		
		public employe()
		{
			this._documentEmployes = new EntitySet<documentEmploye>(new Action<documentEmploye>(this.attach_documentEmployes), new Action<documentEmploye>(this.detach_documentEmployes));
			this._remarqueEmployes = new EntitySet<remarqueEmploye>(new Action<remarqueEmploye>(this.attach_remarqueEmployes), new Action<remarqueEmploye>(this.detach_remarqueEmployes));
			this._Travails = new EntitySet<Travail>(new Action<Travail>(this.attach_Travails), new Action<Travail>(this.detach_Travails));
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(150)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(255)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_postal", DbType="Int")]
		public System.Nullable<int> code_postal
		{
			get
			{
				return this._code_postal;
			}
			set
			{
				if ((this._code_postal != value))
				{
					this.Oncode_postalChanging(value);
					this.SendPropertyChanging();
					this._code_postal = value;
					this.SendPropertyChanged("code_postal");
					this.Oncode_postalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(150)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_recrutement", DbType="Date")]
		public System.Nullable<System.DateTime> date_recrutement
		{
			get
			{
				return this._date_recrutement;
			}
			set
			{
				if ((this._date_recrutement != value))
				{
					this.Ondate_recrutementChanging(value);
					this.SendPropertyChanging();
					this._date_recrutement = value;
					this.SendPropertyChanged("date_recrutement");
					this.Ondate_recrutementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actif", DbType="Bit")]
		public System.Nullable<bool> actif
		{
			get
			{
				return this._actif;
			}
			set
			{
				if ((this._actif != value))
				{
					this.OnactifChanging(value);
					this.SendPropertyChanging();
					this._actif = value;
					this.SendPropertyChanged("actif");
					this.OnactifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_depart", DbType="Date")]
		public System.Nullable<System.DateTime> date_depart
		{
			get
			{
				return this._date_depart;
			}
			set
			{
				if ((this._date_depart != value))
				{
					this.Ondate_departChanging(value);
					this.SendPropertyChanging();
					this._date_depart = value;
					this.SendPropertyChanged("date_depart");
					this.Ondate_departChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeEmploye", DbType="VarChar(50)")]
		public string typeEmploye
		{
			get
			{
				return this._typeEmploye;
			}
			set
			{
				if ((this._typeEmploye != value))
				{
					this.OntypeEmployeChanging(value);
					this.SendPropertyChanging();
					this._typeEmploye = value;
					this.SendPropertyChanged("typeEmploye");
					this.OntypeEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ville", DbType="Int")]
		public System.Nullable<int> id_ville
		{
			get
			{
				return this._id_ville;
			}
			set
			{
				if ((this._id_ville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_villeChanging(value);
					this.SendPropertyChanging();
					this._id_ville = value;
					this.SendPropertyChanged("id_ville");
					this.Onid_villeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_documentEmploye", Storage="_documentEmployes", ThisKey="id", OtherKey="id_employe")]
		public EntitySet<documentEmploye> documentEmployes
		{
			get
			{
				return this._documentEmployes;
			}
			set
			{
				this._documentEmployes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_remarqueEmploye", Storage="_remarqueEmployes", ThisKey="id", OtherKey="id_employe")]
		public EntitySet<remarqueEmploye> remarqueEmployes
		{
			get
			{
				return this._remarqueEmployes;
			}
			set
			{
				this._remarqueEmployes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_Travail", Storage="_Travails", ThisKey="id", OtherKey="IdEmp")]
		public EntitySet<Travail> Travails
		{
			get
			{
				return this._Travails;
			}
			set
			{
				this._Travails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_employe", Storage="_ville", ThisKey="id_ville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.employes.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.employes.Add(this);
						this._id_ville = value.id;
					}
					else
					{
						this._id_ville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_documentEmployes(documentEmploye entity)
		{
			this.SendPropertyChanging();
			entity.employe = this;
		}
		
		private void detach_documentEmployes(documentEmploye entity)
		{
			this.SendPropertyChanging();
			entity.employe = null;
		}
		
		private void attach_remarqueEmployes(remarqueEmploye entity)
		{
			this.SendPropertyChanging();
			entity.employe = this;
		}
		
		private void detach_remarqueEmployes(remarqueEmploye entity)
		{
			this.SendPropertyChanging();
			entity.employe = null;
		}
		
		private void attach_Travails(Travail entity)
		{
			this.SendPropertyChanging();
			entity.employe = this;
		}
		
		private void detach_Travails(Travail entity)
		{
			this.SendPropertyChanging();
			entity.employe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.immeuble")]
	public partial class immeuble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private System.Nullable<int> _nbrEtage;
		
		private System.Nullable<int> _id_bloc;
		
		private EntitySet<bien> _biens;
		
		private EntityRef<bloc> _bloc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnnbrEtageChanging(System.Nullable<int> value);
    partial void OnnbrEtageChanged();
    partial void Onid_blocChanging(System.Nullable<int> value);
    partial void Onid_blocChanged();
    #endregion
		
		public immeuble()
		{
			this._biens = new EntitySet<bien>(new Action<bien>(this.attach_biens), new Action<bien>(this.detach_biens));
			this._bloc = default(EntityRef<bloc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbrEtage", DbType="Int")]
		public System.Nullable<int> nbrEtage
		{
			get
			{
				return this._nbrEtage;
			}
			set
			{
				if ((this._nbrEtage != value))
				{
					this.OnnbrEtageChanging(value);
					this.SendPropertyChanging();
					this._nbrEtage = value;
					this.SendPropertyChanged("nbrEtage");
					this.OnnbrEtageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bloc", DbType="Int")]
		public System.Nullable<int> id_bloc
		{
			get
			{
				return this._id_bloc;
			}
			set
			{
				if ((this._id_bloc != value))
				{
					if (this._bloc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_blocChanging(value);
					this.SendPropertyChanging();
					this._id_bloc = value;
					this.SendPropertyChanged("id_bloc");
					this.Onid_blocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="immeuble_bien", Storage="_biens", ThisKey="id", OtherKey="id_immeuble")]
		public EntitySet<bien> biens
		{
			get
			{
				return this._biens;
			}
			set
			{
				this._biens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bloc_immeuble", Storage="_bloc", ThisKey="id_bloc", OtherKey="id", IsForeignKey=true)]
		public bloc bloc
		{
			get
			{
				return this._bloc.Entity;
			}
			set
			{
				bloc previousValue = this._bloc.Entity;
				if (((previousValue != value) 
							|| (this._bloc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bloc.Entity = null;
						previousValue.immeubles.Remove(this);
					}
					this._bloc.Entity = value;
					if ((value != null))
					{
						value.immeubles.Add(this);
						this._id_bloc = value.id;
					}
					else
					{
						this._id_bloc = default(Nullable<int>);
					}
					this.SendPropertyChanged("bloc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_biens(bien entity)
		{
			this.SendPropertyChanging();
			entity.immeuble = this;
		}
		
		private void detach_biens(bien entity)
		{
			this.SendPropertyChanging();
			entity.immeuble = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.intervention")]
	public partial class intervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _libelle;
		
		private System.Nullable<System.DateTime> _dateDebut;
		
		private System.Nullable<System.DateTime> _dateFin;
		
		private System.Nullable<decimal> _montant;
		
		private System.Nullable<int> _id_depense;
		
		private EntityRef<depense> _depense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void OndateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OndateDebutChanged();
    partial void OndateFinChanging(System.Nullable<System.DateTime> value);
    partial void OndateFinChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    partial void Onid_depenseChanging(System.Nullable<int> value);
    partial void Onid_depenseChanged();
    #endregion
		
		public intervention()
		{
			this._depense = default(EntityRef<depense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(150)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="Date")]
		public System.Nullable<System.DateTime> dateDebut
		{
			get
			{
				return this._dateDebut;
			}
			set
			{
				if ((this._dateDebut != value))
				{
					this.OndateDebutChanging(value);
					this.SendPropertyChanging();
					this._dateDebut = value;
					this.SendPropertyChanged("dateDebut");
					this.OndateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFin", DbType="Date")]
		public System.Nullable<System.DateTime> dateFin
		{
			get
			{
				return this._dateFin;
			}
			set
			{
				if ((this._dateFin != value))
				{
					this.OndateFinChanging(value);
					this.SendPropertyChanging();
					this._dateFin = value;
					this.SendPropertyChanged("dateFin");
					this.OndateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Money")]
		public System.Nullable<decimal> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_depense", DbType="Int")]
		public System.Nullable<int> id_depense
		{
			get
			{
				return this._id_depense;
			}
			set
			{
				if ((this._id_depense != value))
				{
					if (this._depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_depenseChanging(value);
					this.SendPropertyChanging();
					this._id_depense = value;
					this.SendPropertyChanged("id_depense");
					this.Onid_depenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_intervention", Storage="_depense", ThisKey="id_depense", OtherKey="id", IsForeignKey=true)]
		public depense depense
		{
			get
			{
				return this._depense.Entity;
			}
			set
			{
				depense previousValue = this._depense.Entity;
				if (((previousValue != value) 
							|| (this._depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._depense.Entity = null;
						previousValue.interventions.Remove(this);
					}
					this._depense.Entity = value;
					if ((value != null))
					{
						value.interventions.Add(this);
						this._id_depense = value.id;
					}
					else
					{
						this._id_depense = default(Nullable<int>);
					}
					this.SendPropertyChanged("depense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.journal")]
	public partial class journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_utilisateur;
		
		private System.Nullable<System.DateTime> _date_action;
		
		private string _action;
		
		private string _table_action;
		
		private string _anciennes_valeurs;
		
		private string _nouvelles_valeurs;
		
		private EntityRef<utilisateur> _utilisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_utilisateurChanging(System.Nullable<int> value);
    partial void Onid_utilisateurChanged();
    partial void Ondate_actionChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_actionChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void Ontable_actionChanging(string value);
    partial void Ontable_actionChanged();
    partial void Onanciennes_valeursChanging(string value);
    partial void Onanciennes_valeursChanged();
    partial void Onnouvelles_valeursChanging(string value);
    partial void Onnouvelles_valeursChanged();
    #endregion
		
		public journal()
		{
			this._utilisateur = default(EntityRef<utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_utilisateur", DbType="Int")]
		public System.Nullable<int> id_utilisateur
		{
			get
			{
				return this._id_utilisateur;
			}
			set
			{
				if ((this._id_utilisateur != value))
				{
					if (this._utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_utilisateurChanging(value);
					this.SendPropertyChanging();
					this._id_utilisateur = value;
					this.SendPropertyChanged("id_utilisateur");
					this.Onid_utilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_action", DbType="Date")]
		public System.Nullable<System.DateTime> date_action
		{
			get
			{
				return this._date_action;
			}
			set
			{
				if ((this._date_action != value))
				{
					this.Ondate_actionChanging(value);
					this.SendPropertyChanging();
					this._date_action = value;
					this.SendPropertyChanged("date_action");
					this.Ondate_actionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="VarChar(50)")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_action", DbType="VarChar(50)")]
		public string table_action
		{
			get
			{
				return this._table_action;
			}
			set
			{
				if ((this._table_action != value))
				{
					this.Ontable_actionChanging(value);
					this.SendPropertyChanging();
					this._table_action = value;
					this.SendPropertyChanged("table_action");
					this.Ontable_actionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anciennes_valeurs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string anciennes_valeurs
		{
			get
			{
				return this._anciennes_valeurs;
			}
			set
			{
				if ((this._anciennes_valeurs != value))
				{
					this.Onanciennes_valeursChanging(value);
					this.SendPropertyChanging();
					this._anciennes_valeurs = value;
					this.SendPropertyChanged("anciennes_valeurs");
					this.Onanciennes_valeursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nouvelles_valeurs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string nouvelles_valeurs
		{
			get
			{
				return this._nouvelles_valeurs;
			}
			set
			{
				if ((this._nouvelles_valeurs != value))
				{
					this.Onnouvelles_valeursChanging(value);
					this.SendPropertyChanging();
					this._nouvelles_valeurs = value;
					this.SendPropertyChanged("nouvelles_valeurs");
					this.Onnouvelles_valeursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_journal", Storage="_utilisateur", ThisKey="id_utilisateur", OtherKey="id", IsForeignKey=true)]
		public utilisateur utilisateur
		{
			get
			{
				return this._utilisateur.Entity;
			}
			set
			{
				utilisateur previousValue = this._utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utilisateur.Entity = null;
						previousValue.journals.Remove(this);
					}
					this._utilisateur.Entity = value;
					if ((value != null))
					{
						value.journals.Add(this);
						this._id_utilisateur = value.id;
					}
					else
					{
						this._id_utilisateur = default(Nullable<int>);
					}
					this.SendPropertyChanged("utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ligne")]
	public partial class ligne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_produit;
		
		private int _id_depense;
		
		private System.Nullable<int> _qte;
		
		private System.Nullable<decimal> _prix;
		
		private EntityRef<depense> _depense;
		
		private EntityRef<produit> _produit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_produitChanging(int value);
    partial void Onid_produitChanged();
    partial void Onid_depenseChanging(int value);
    partial void Onid_depenseChanged();
    partial void OnqteChanging(System.Nullable<int> value);
    partial void OnqteChanged();
    partial void OnprixChanging(System.Nullable<decimal> value);
    partial void OnprixChanged();
    #endregion
		
		public ligne()
		{
			this._depense = default(EntityRef<depense>);
			this._produit = default(EntityRef<produit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_produit
		{
			get
			{
				return this._id_produit;
			}
			set
			{
				if ((this._id_produit != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produitChanging(value);
					this.SendPropertyChanging();
					this._id_produit = value;
					this.SendPropertyChanged("id_produit");
					this.Onid_produitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_depense", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_depense
		{
			get
			{
				return this._id_depense;
			}
			set
			{
				if ((this._id_depense != value))
				{
					if (this._depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_depenseChanging(value);
					this.SendPropertyChanging();
					this._id_depense = value;
					this.SendPropertyChanged("id_depense");
					this.Onid_depenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qte", DbType="Int")]
		public System.Nullable<int> qte
		{
			get
			{
				return this._qte;
			}
			set
			{
				if ((this._qte != value))
				{
					this.OnqteChanging(value);
					this.SendPropertyChanging();
					this._qte = value;
					this.SendPropertyChanged("qte");
					this.OnqteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Money")]
		public System.Nullable<decimal> prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_ligne", Storage="_depense", ThisKey="id_depense", OtherKey="id", IsForeignKey=true)]
		public depense depense
		{
			get
			{
				return this._depense.Entity;
			}
			set
			{
				depense previousValue = this._depense.Entity;
				if (((previousValue != value) 
							|| (this._depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._depense.Entity = null;
						previousValue.lignes.Remove(this);
					}
					this._depense.Entity = value;
					if ((value != null))
					{
						value.lignes.Add(this);
						this._id_depense = value.id;
					}
					else
					{
						this._id_depense = default(int);
					}
					this.SendPropertyChanged("depense");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_ligne", Storage="_produit", ThisKey="id_produit", OtherKey="id", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.lignes.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.lignes.Add(this);
						this._id_produit = value.id;
					}
					else
					{
						this._id_produit = default(int);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.message")]
	public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _objet;
		
		private string _message1;
		
		private string _fichier;
		
		private System.Nullable<System.DateTime> _date_message;
		
		private System.Nullable<int> _de;
		
		private EntityRef<utilisateur> _utilisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnobjetChanging(string value);
    partial void OnobjetChanged();
    partial void Onmessage1Changing(string value);
    partial void Onmessage1Changed();
    partial void OnfichierChanging(string value);
    partial void OnfichierChanged();
    partial void Ondate_messageChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_messageChanged();
    partial void OndeChanging(System.Nullable<int> value);
    partial void OndeChanged();
    #endregion
		
		public message()
		{
			this._utilisateur = default(EntityRef<utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objet", DbType="VarChar(255)")]
		public string objet
		{
			get
			{
				return this._objet;
			}
			set
			{
				if ((this._objet != value))
				{
					this.OnobjetChanging(value);
					this.SendPropertyChanging();
					this._objet = value;
					this.SendPropertyChanged("objet");
					this.OnobjetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="message", Storage="_message1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string message1
		{
			get
			{
				return this._message1;
			}
			set
			{
				if ((this._message1 != value))
				{
					this.Onmessage1Changing(value);
					this.SendPropertyChanging();
					this._message1 = value;
					this.SendPropertyChanged("message1");
					this.Onmessage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fichier", DbType="VarChar(100)")]
		public string fichier
		{
			get
			{
				return this._fichier;
			}
			set
			{
				if ((this._fichier != value))
				{
					this.OnfichierChanging(value);
					this.SendPropertyChanging();
					this._fichier = value;
					this.SendPropertyChanged("fichier");
					this.OnfichierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_message", DbType="Date")]
		public System.Nullable<System.DateTime> date_message
		{
			get
			{
				return this._date_message;
			}
			set
			{
				if ((this._date_message != value))
				{
					this.Ondate_messageChanging(value);
					this.SendPropertyChanging();
					this._date_message = value;
					this.SendPropertyChanged("date_message");
					this.Ondate_messageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_de", DbType="Int")]
		public System.Nullable<int> de
		{
			get
			{
				return this._de;
			}
			set
			{
				if ((this._de != value))
				{
					if (this._utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeChanging(value);
					this.SendPropertyChanging();
					this._de = value;
					this.SendPropertyChanged("de");
					this.OndeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_message", Storage="_utilisateur", ThisKey="de", OtherKey="id", IsForeignKey=true)]
		public utilisateur utilisateur
		{
			get
			{
				return this._utilisateur.Entity;
			}
			set
			{
				utilisateur previousValue = this._utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utilisateur.Entity = null;
						previousValue.messages.Remove(this);
					}
					this._utilisateur.Entity = value;
					if ((value != null))
					{
						value.messages.Add(this);
						this._de = value.id;
					}
					else
					{
						this._de = default(Nullable<int>);
					}
					this.SendPropertyChanged("utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.message_utilisateurs")]
	public partial class message_utilisateur
	{
		
		private System.Nullable<int> _id_message;
		
		private System.Nullable<int> _a;
		
		public message_utilisateur()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_message", DbType="Int")]
		public System.Nullable<int> id_message
		{
			get
			{
				return this._id_message;
			}
			set
			{
				if ((this._id_message != value))
				{
					this._id_message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a", DbType="Int")]
		public System.Nullable<int> a
		{
			get
			{
				return this._a;
			}
			set
			{
				if ((this._a != value))
				{
					this._a = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produit")]
	public partial class produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _designation;
		
		private System.Nullable<int> _qteStock;
		
		private string _categorie;
		
		private EntitySet<ligne> _lignes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnqteStockChanging(System.Nullable<int> value);
    partial void OnqteStockChanged();
    partial void OncategorieChanging(string value);
    partial void OncategorieChanged();
    #endregion
		
		public produit()
		{
			this._lignes = new EntitySet<ligne>(new Action<ligne>(this.attach_lignes), new Action<ligne>(this.detach_lignes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="VarChar(150)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qteStock", DbType="Int")]
		public System.Nullable<int> qteStock
		{
			get
			{
				return this._qteStock;
			}
			set
			{
				if ((this._qteStock != value))
				{
					this.OnqteStockChanging(value);
					this.SendPropertyChanging();
					this._qteStock = value;
					this.SendPropertyChanged("qteStock");
					this.OnqteStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categorie", DbType="VarChar(150)")]
		public string categorie
		{
			get
			{
				return this._categorie;
			}
			set
			{
				if ((this._categorie != value))
				{
					this.OncategorieChanging(value);
					this.SendPropertyChanging();
					this._categorie = value;
					this.SendPropertyChanged("categorie");
					this.OncategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_ligne", Storage="_lignes", ThisKey="id", OtherKey="id_produit")]
		public EntitySet<ligne> lignes
		{
			get
			{
				return this._lignes;
			}
			set
			{
				this._lignes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_lignes(ligne entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_lignes(ligne entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.proprietaire")]
	public partial class proprietaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _adresse;
		
		private System.Nullable<int> _code_postal;
		
		private string _tel;
		
		private string _email;
		
		private System.Nullable<int> _id_ville;
		
		private string _Sexe;
		
		private string _Titre;
		
		private string _CIN;
		
		private EntitySet<bien> _biens;
		
		private EntitySet<cotisation> _cotisations;
		
		private EntitySet<documentProprietaire> _documentProprietaires;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void Oncode_postalChanging(System.Nullable<int> value);
    partial void Oncode_postalChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_villeChanging(System.Nullable<int> value);
    partial void Onid_villeChanged();
    partial void OnSexeChanging(string value);
    partial void OnSexeChanged();
    partial void OnTitreChanging(string value);
    partial void OnTitreChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    #endregion
		
		public proprietaire()
		{
			this._biens = new EntitySet<bien>(new Action<bien>(this.attach_biens), new Action<bien>(this.detach_biens));
			this._cotisations = new EntitySet<cotisation>(new Action<cotisation>(this.attach_cotisations), new Action<cotisation>(this.detach_cotisations));
			this._documentProprietaires = new EntitySet<documentProprietaire>(new Action<documentProprietaire>(this.attach_documentProprietaires), new Action<documentProprietaire>(this.detach_documentProprietaires));
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(150)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(255)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_postal", DbType="Int")]
		public System.Nullable<int> code_postal
		{
			get
			{
				return this._code_postal;
			}
			set
			{
				if ((this._code_postal != value))
				{
					this.Oncode_postalChanging(value);
					this.SendPropertyChanging();
					this._code_postal = value;
					this.SendPropertyChanged("code_postal");
					this.Oncode_postalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(150)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ville", DbType="Int")]
		public System.Nullable<int> id_ville
		{
			get
			{
				return this._id_ville;
			}
			set
			{
				if ((this._id_ville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_villeChanging(value);
					this.SendPropertyChanging();
					this._id_ville = value;
					this.SendPropertyChanged("id_ville");
					this.Onid_villeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexe", DbType="VarChar(50)")]
		public string Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titre", DbType="VarChar(50)")]
		public string Titre
		{
			get
			{
				return this._Titre;
			}
			set
			{
				if ((this._Titre != value))
				{
					this.OnTitreChanging(value);
					this.SendPropertyChanging();
					this._Titre = value;
					this.SendPropertyChanged("Titre");
					this.OnTitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(100)")]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_bien", Storage="_biens", ThisKey="id", OtherKey="id_proprietaire")]
		public EntitySet<bien> biens
		{
			get
			{
				return this._biens;
			}
			set
			{
				this._biens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_cotisation", Storage="_cotisations", ThisKey="id", OtherKey="id_propietaire")]
		public EntitySet<cotisation> cotisations
		{
			get
			{
				return this._cotisations;
			}
			set
			{
				this._cotisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="proprietaire_documentProprietaire", Storage="_documentProprietaires", ThisKey="id", OtherKey="id_Proprietaire")]
		public EntitySet<documentProprietaire> documentProprietaires
		{
			get
			{
				return this._documentProprietaires;
			}
			set
			{
				this._documentProprietaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_proprietaire", Storage="_ville", ThisKey="id_ville", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.proprietaires.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.proprietaires.Add(this);
						this._id_ville = value.id;
					}
					else
					{
						this._id_ville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_biens(bien entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = this;
		}
		
		private void detach_biens(bien entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = null;
		}
		
		private void attach_cotisations(cotisation entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = this;
		}
		
		private void detach_cotisations(cotisation entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = null;
		}
		
		private void attach_documentProprietaires(documentProprietaire entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = this;
		}
		
		private void detach_documentProprietaires(documentProprietaire entity)
		{
			this.SendPropertyChanging();
			entity.proprietaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProprietaireArchive")]
	public partial class ProprietaireArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _adresse;
		
		private System.Nullable<int> _code_postal;
		
		private string _tele;
		
		private string _email;
		
		private System.Nullable<int> _id_ville;
		
		private string _sexe;
		
		private string _titre;
		
		private string _cin;
		
		private System.Nullable<int> _bien;
		
		private System.Nullable<int> _immeuble;
		
		private System.Nullable<System.DateTime> _dateVente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void Oncode_postalChanging(System.Nullable<int> value);
    partial void Oncode_postalChanged();
    partial void OnteleChanging(string value);
    partial void OnteleChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_villeChanging(System.Nullable<int> value);
    partial void Onid_villeChanged();
    partial void OnsexeChanging(string value);
    partial void OnsexeChanged();
    partial void OntitreChanging(string value);
    partial void OntitreChanged();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void OnbienChanging(System.Nullable<int> value);
    partial void OnbienChanged();
    partial void OnimmeubleChanging(System.Nullable<int> value);
    partial void OnimmeubleChanged();
    partial void OndateVenteChanging(System.Nullable<System.DateTime> value);
    partial void OndateVenteChanged();
    #endregion
		
		public ProprietaireArchive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(30)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(50)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_postal", DbType="Int")]
		public System.Nullable<int> code_postal
		{
			get
			{
				return this._code_postal;
			}
			set
			{
				if ((this._code_postal != value))
				{
					this.Oncode_postalChanging(value);
					this.SendPropertyChanging();
					this._code_postal = value;
					this.SendPropertyChanged("code_postal");
					this.Oncode_postalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tele", DbType="VarChar(30)")]
		public string tele
		{
			get
			{
				return this._tele;
			}
			set
			{
				if ((this._tele != value))
				{
					this.OnteleChanging(value);
					this.SendPropertyChanging();
					this._tele = value;
					this.SendPropertyChanged("tele");
					this.OnteleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(40)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ville", DbType="Int")]
		public System.Nullable<int> id_ville
		{
			get
			{
				return this._id_ville;
			}
			set
			{
				if ((this._id_ville != value))
				{
					this.Onid_villeChanging(value);
					this.SendPropertyChanging();
					this._id_ville = value;
					this.SendPropertyChanged("id_ville");
					this.Onid_villeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexe", DbType="VarChar(20)")]
		public string sexe
		{
			get
			{
				return this._sexe;
			}
			set
			{
				if ((this._sexe != value))
				{
					this.OnsexeChanging(value);
					this.SendPropertyChanging();
					this._sexe = value;
					this.SendPropertyChanged("sexe");
					this.OnsexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre", DbType="VarChar(20)")]
		public string titre
		{
			get
			{
				return this._titre;
			}
			set
			{
				if ((this._titre != value))
				{
					this.OntitreChanging(value);
					this.SendPropertyChanging();
					this._titre = value;
					this.SendPropertyChanged("titre");
					this.OntitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="VarChar(30)")]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bien", DbType="Int")]
		public System.Nullable<int> bien
		{
			get
			{
				return this._bien;
			}
			set
			{
				if ((this._bien != value))
				{
					this.OnbienChanging(value);
					this.SendPropertyChanging();
					this._bien = value;
					this.SendPropertyChanged("bien");
					this.OnbienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_immeuble", DbType="Int")]
		public System.Nullable<int> immeuble
		{
			get
			{
				return this._immeuble;
			}
			set
			{
				if ((this._immeuble != value))
				{
					this.OnimmeubleChanging(value);
					this.SendPropertyChanging();
					this._immeuble = value;
					this.SendPropertyChanged("immeuble");
					this.OnimmeubleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateVente", DbType="Date")]
		public System.Nullable<System.DateTime> dateVente
		{
			get
			{
				return this._dateVente;
			}
			set
			{
				if ((this._dateVente != value))
				{
					this.OndateVenteChanging(value);
					this.SendPropertyChanging();
					this._dateVente = value;
					this.SendPropertyChanged("dateVente");
					this.OndateVenteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.remarqueBien")]
	public partial class remarqueBien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _remarque;
		
		private System.Nullable<int> _id_Bien;
		
		private EntityRef<bien> _bien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnremarqueChanging(string value);
    partial void OnremarqueChanged();
    partial void Onid_BienChanging(System.Nullable<int> value);
    partial void Onid_BienChanged();
    #endregion
		
		public remarqueBien()
		{
			this._bien = default(EntityRef<bien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarque", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remarque
		{
			get
			{
				return this._remarque;
			}
			set
			{
				if ((this._remarque != value))
				{
					this.OnremarqueChanging(value);
					this.SendPropertyChanging();
					this._remarque = value;
					this.SendPropertyChanged("remarque");
					this.OnremarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Bien", DbType="Int")]
		public System.Nullable<int> id_Bien
		{
			get
			{
				return this._id_Bien;
			}
			set
			{
				if ((this._id_Bien != value))
				{
					if (this._bien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BienChanging(value);
					this.SendPropertyChanging();
					this._id_Bien = value;
					this.SendPropertyChanged("id_Bien");
					this.Onid_BienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bien_remarqueBien", Storage="_bien", ThisKey="id_Bien", OtherKey="id", IsForeignKey=true)]
		public bien bien
		{
			get
			{
				return this._bien.Entity;
			}
			set
			{
				bien previousValue = this._bien.Entity;
				if (((previousValue != value) 
							|| (this._bien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bien.Entity = null;
						previousValue.remarqueBiens.Remove(this);
					}
					this._bien.Entity = value;
					if ((value != null))
					{
						value.remarqueBiens.Add(this);
						this._id_Bien = value.id;
					}
					else
					{
						this._id_Bien = default(Nullable<int>);
					}
					this.SendPropertyChanged("bien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.remarqueDepnse")]
	public partial class remarqueDepnse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _remarque;
		
		private System.Nullable<int> _id_Depense;
		
		private EntityRef<depense> _depense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnremarqueChanging(string value);
    partial void OnremarqueChanged();
    partial void Onid_DepenseChanging(System.Nullable<int> value);
    partial void Onid_DepenseChanged();
    #endregion
		
		public remarqueDepnse()
		{
			this._depense = default(EntityRef<depense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarque", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remarque
		{
			get
			{
				return this._remarque;
			}
			set
			{
				if ((this._remarque != value))
				{
					this.OnremarqueChanging(value);
					this.SendPropertyChanging();
					this._remarque = value;
					this.SendPropertyChanged("remarque");
					this.OnremarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Depense", DbType="Int")]
		public System.Nullable<int> id_Depense
		{
			get
			{
				return this._id_Depense;
			}
			set
			{
				if ((this._id_Depense != value))
				{
					if (this._depense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DepenseChanging(value);
					this.SendPropertyChanging();
					this._id_Depense = value;
					this.SendPropertyChanged("id_Depense");
					this.Onid_DepenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="depense_remarqueDepnse", Storage="_depense", ThisKey="id_Depense", OtherKey="id", IsForeignKey=true)]
		public depense depense
		{
			get
			{
				return this._depense.Entity;
			}
			set
			{
				depense previousValue = this._depense.Entity;
				if (((previousValue != value) 
							|| (this._depense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._depense.Entity = null;
						previousValue.remarqueDepnses.Remove(this);
					}
					this._depense.Entity = value;
					if ((value != null))
					{
						value.remarqueDepnses.Add(this);
						this._id_Depense = value.id;
					}
					else
					{
						this._id_Depense = default(Nullable<int>);
					}
					this.SendPropertyChanged("depense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.remarqueEmploye")]
	public partial class remarqueEmploye : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _remarque;
		
		private System.Nullable<int> _id_employe;
		
		private EntityRef<employe> _employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnremarqueChanging(string value);
    partial void OnremarqueChanged();
    partial void Onid_employeChanging(System.Nullable<int> value);
    partial void Onid_employeChanged();
    #endregion
		
		public remarqueEmploye()
		{
			this._employe = default(EntityRef<employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarque", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remarque
		{
			get
			{
				return this._remarque;
			}
			set
			{
				if ((this._remarque != value))
				{
					this.OnremarqueChanging(value);
					this.SendPropertyChanging();
					this._remarque = value;
					this.SendPropertyChanged("remarque");
					this.OnremarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employe", DbType="Int")]
		public System.Nullable<int> id_employe
		{
			get
			{
				return this._id_employe;
			}
			set
			{
				if ((this._id_employe != value))
				{
					if (this._employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeChanging(value);
					this.SendPropertyChanging();
					this._id_employe = value;
					this.SendPropertyChanged("id_employe");
					this.Onid_employeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_remarqueEmploye", Storage="_employe", ThisKey="id_employe", OtherKey="id", IsForeignKey=true)]
		public employe employe
		{
			get
			{
				return this._employe.Entity;
			}
			set
			{
				employe previousValue = this._employe.Entity;
				if (((previousValue != value) 
							|| (this._employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employe.Entity = null;
						previousValue.remarqueEmployes.Remove(this);
					}
					this._employe.Entity = value;
					if ((value != null))
					{
						value.remarqueEmployes.Add(this);
						this._id_employe = value.id;
					}
					else
					{
						this._id_employe = default(Nullable<int>);
					}
					this.SendPropertyChanged("employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.residence")]
	public partial class residence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _adresse;
		
		private System.Nullable<int> _codepostale;
		
		private System.Nullable<int> _id_ville;
		
		private EntitySet<bloc> _blocs;
		
		private EntitySet<Travail> _Travails;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OncodepostaleChanging(System.Nullable<int> value);
    partial void OncodepostaleChanged();
    partial void Onid_villeChanging(System.Nullable<int> value);
    partial void Onid_villeChanged();
    #endregion
		
		public residence()
		{
			this._blocs = new EntitySet<bloc>(new Action<bloc>(this.attach_blocs), new Action<bloc>(this.detach_blocs));
			this._Travails = new EntitySet<Travail>(new Action<Travail>(this.attach_Travails), new Action<Travail>(this.detach_Travails));
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(150)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codepostale", DbType="Int")]
		public System.Nullable<int> codepostale
		{
			get
			{
				return this._codepostale;
			}
			set
			{
				if ((this._codepostale != value))
				{
					this.OncodepostaleChanging(value);
					this.SendPropertyChanging();
					this._codepostale = value;
					this.SendPropertyChanged("codepostale");
					this.OncodepostaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ville", DbType="Int")]
		public System.Nullable<int> id_ville
		{
			get
			{
				return this._id_ville;
			}
			set
			{
				if ((this._id_ville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_villeChanging(value);
					this.SendPropertyChanging();
					this._id_ville = value;
					this.SendPropertyChanged("id_ville");
					this.Onid_villeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="residence_bloc", Storage="_blocs", ThisKey="id", OtherKey="id_Residence")]
		public EntitySet<bloc> blocs
		{
			get
			{
				return this._blocs;
			}
			set
			{
				this._blocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="residence_Travail", Storage="_Travails", ThisKey="id", OtherKey="IdRes")]
		public EntitySet<Travail> Travails
		{
			get
			{
				return this._Travails;
			}
			set
			{
				this._Travails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_residence", Storage="_ville", ThisKey="id_ville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.residences.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.residences.Add(this);
						this._id_ville = value.id;
					}
					else
					{
						this._id_ville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_blocs(bloc entity)
		{
			this.SendPropertyChanging();
			entity.residence = this;
		}
		
		private void detach_blocs(bloc entity)
		{
			this.SendPropertyChanging();
			entity.residence = null;
		}
		
		private void attach_Travails(Travail entity)
		{
			this.SendPropertyChanging();
			entity.residence = this;
		}
		
		private void detach_Travails(Travail entity)
		{
			this.SendPropertyChanging();
			entity.residence = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.societe")]
	public partial class societe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _raison_sociale;
		
		private string _nom;
		
		private string _prenom;
		
		private string _adresse;
		
		private System.Nullable<int> _code_postal;
		
		private string _tel;
		
		private string _email;
		
		private System.Nullable<int> _id_ville;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onraison_socialeChanging(string value);
    partial void Onraison_socialeChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void Oncode_postalChanging(System.Nullable<int> value);
    partial void Oncode_postalChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_villeChanging(System.Nullable<int> value);
    partial void Onid_villeChanged();
    #endregion
		
		public societe()
		{
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raison_sociale", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string raison_sociale
		{
			get
			{
				return this._raison_sociale;
			}
			set
			{
				if ((this._raison_sociale != value))
				{
					this.Onraison_socialeChanging(value);
					this.SendPropertyChanging();
					this._raison_sociale = value;
					this.SendPropertyChanged("raison_sociale");
					this.Onraison_socialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(150)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(150)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(255)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_postal", DbType="Int")]
		public System.Nullable<int> code_postal
		{
			get
			{
				return this._code_postal;
			}
			set
			{
				if ((this._code_postal != value))
				{
					this.Oncode_postalChanging(value);
					this.SendPropertyChanging();
					this._code_postal = value;
					this.SendPropertyChanged("code_postal");
					this.Oncode_postalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(150)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ville", DbType="Int")]
		public System.Nullable<int> id_ville
		{
			get
			{
				return this._id_ville;
			}
			set
			{
				if ((this._id_ville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_villeChanging(value);
					this.SendPropertyChanging();
					this._id_ville = value;
					this.SendPropertyChanged("id_ville");
					this.Onid_villeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_societe", Storage="_ville", ThisKey="id_ville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.societes.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.societes.Add(this);
						this._id_ville = value.id;
					}
					else
					{
						this._id_ville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableType")]
	public partial class TableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _libelle;
		
		private EntitySet<Type> _Types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public TableType()
		{
			this._Types = new EntitySet<Type>(new Action<Type>(this.attach_Types), new Action<Type>(this.detach_Types));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(150)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableType_Type", Storage="_Types", ThisKey="id", OtherKey="idTableType")]
		public EntitySet<Type> Types
		{
			get
			{
				return this._Types;
			}
			set
			{
				this._Types.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Types(Type entity)
		{
			this.SendPropertyChanging();
			entity.TableType = this;
		}
		
		private void detach_Types(Type entity)
		{
			this.SendPropertyChanging();
			entity.TableType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Travail")]
	public partial class Travail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmp;
		
		private int _IdRes;
		
		private System.Nullable<System.DateTime> _datedebut;
		
		private System.Nullable<System.DateTime> _datefin;
		
		private EntityRef<employe> _employe;
		
		private EntityRef<residence> _residence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpChanging(int value);
    partial void OnIdEmpChanged();
    partial void OnIdResChanging(int value);
    partial void OnIdResChanged();
    partial void OndatedebutChanging(System.Nullable<System.DateTime> value);
    partial void OndatedebutChanged();
    partial void OndatefinChanging(System.Nullable<System.DateTime> value);
    partial void OndatefinChanged();
    #endregion
		
		public Travail()
		{
			this._employe = default(EntityRef<employe>);
			this._residence = default(EntityRef<residence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmp
		{
			get
			{
				return this._IdEmp;
			}
			set
			{
				if ((this._IdEmp != value))
				{
					if (this._employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpChanging(value);
					this.SendPropertyChanging();
					this._IdEmp = value;
					this.SendPropertyChanged("IdEmp");
					this.OnIdEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRes", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdRes
		{
			get
			{
				return this._IdRes;
			}
			set
			{
				if ((this._IdRes != value))
				{
					if (this._residence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdResChanging(value);
					this.SendPropertyChanging();
					this._IdRes = value;
					this.SendPropertyChanged("IdRes");
					this.OnIdResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datedebut", DbType="Date")]
		public System.Nullable<System.DateTime> datedebut
		{
			get
			{
				return this._datedebut;
			}
			set
			{
				if ((this._datedebut != value))
				{
					this.OndatedebutChanging(value);
					this.SendPropertyChanging();
					this._datedebut = value;
					this.SendPropertyChanged("datedebut");
					this.OndatedebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datefin", DbType="Date")]
		public System.Nullable<System.DateTime> datefin
		{
			get
			{
				return this._datefin;
			}
			set
			{
				if ((this._datefin != value))
				{
					this.OndatefinChanging(value);
					this.SendPropertyChanging();
					this._datefin = value;
					this.SendPropertyChanged("datefin");
					this.OndatefinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employe_Travail", Storage="_employe", ThisKey="IdEmp", OtherKey="id", IsForeignKey=true)]
		public employe employe
		{
			get
			{
				return this._employe.Entity;
			}
			set
			{
				employe previousValue = this._employe.Entity;
				if (((previousValue != value) 
							|| (this._employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employe.Entity = null;
						previousValue.Travails.Remove(this);
					}
					this._employe.Entity = value;
					if ((value != null))
					{
						value.Travails.Add(this);
						this._IdEmp = value.id;
					}
					else
					{
						this._IdEmp = default(int);
					}
					this.SendPropertyChanged("employe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="residence_Travail", Storage="_residence", ThisKey="IdRes", OtherKey="id", IsForeignKey=true)]
		public residence residence
		{
			get
			{
				return this._residence.Entity;
			}
			set
			{
				residence previousValue = this._residence.Entity;
				if (((previousValue != value) 
							|| (this._residence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._residence.Entity = null;
						previousValue.Travails.Remove(this);
					}
					this._residence.Entity = value;
					if ((value != null))
					{
						value.Travails.Add(this);
						this._IdRes = value.id;
					}
					else
					{
						this._IdRes = default(int);
					}
					this.SendPropertyChanged("residence");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idTableType;
		
		private string _libelleType;
		
		private EntityRef<TableType> _TableType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidTableTypeChanging(System.Nullable<int> value);
    partial void OnidTableTypeChanged();
    partial void OnlibelleTypeChanging(string value);
    partial void OnlibelleTypeChanged();
    #endregion
		
		public Type()
		{
			this._TableType = default(EntityRef<TableType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTableType", DbType="Int")]
		public System.Nullable<int> idTableType
		{
			get
			{
				return this._idTableType;
			}
			set
			{
				if ((this._idTableType != value))
				{
					if (this._TableType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTableTypeChanging(value);
					this.SendPropertyChanging();
					this._idTableType = value;
					this.SendPropertyChanged("idTableType");
					this.OnidTableTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelleType", DbType="VarChar(150)")]
		public string libelleType
		{
			get
			{
				return this._libelleType;
			}
			set
			{
				if ((this._libelleType != value))
				{
					this.OnlibelleTypeChanging(value);
					this.SendPropertyChanging();
					this._libelleType = value;
					this.SendPropertyChanged("libelleType");
					this.OnlibelleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableType_Type", Storage="_TableType", ThisKey="idTableType", OtherKey="id", IsForeignKey=true)]
		public TableType TableType
		{
			get
			{
				return this._TableType.Entity;
			}
			set
			{
				TableType previousValue = this._TableType.Entity;
				if (((previousValue != value) 
							|| (this._TableType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableType.Entity = null;
						previousValue.Types.Remove(this);
					}
					this._TableType.Entity = value;
					if ((value != null))
					{
						value.Types.Add(this);
						this._idTableType = value.id;
					}
					else
					{
						this._idTableType = default(Nullable<int>);
					}
					this.SendPropertyChanged("TableType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.utilisateur")]
	public partial class utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _typeUtilisateur;
		
		private string _login;
		
		private string _mot_de_passe;
		
		private string _salt;
		
		private System.Nullable<int> _id_table;
		
		private EntitySet<connexion> _connexions;
		
		private EntitySet<journal> _journals;
		
		private EntitySet<message> _messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeUtilisateurChanging(string value);
    partial void OntypeUtilisateurChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void Onmot_de_passeChanging(string value);
    partial void Onmot_de_passeChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void Onid_tableChanging(System.Nullable<int> value);
    partial void Onid_tableChanged();
    #endregion
		
		public utilisateur()
		{
			this._connexions = new EntitySet<connexion>(new Action<connexion>(this.attach_connexions), new Action<connexion>(this.detach_connexions));
			this._journals = new EntitySet<journal>(new Action<journal>(this.attach_journals), new Action<journal>(this.detach_journals));
			this._messages = new EntitySet<message>(new Action<message>(this.attach_messages), new Action<message>(this.detach_messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeUtilisateur", DbType="VarChar(50)")]
		public string typeUtilisateur
		{
			get
			{
				return this._typeUtilisateur;
			}
			set
			{
				if ((this._typeUtilisateur != value))
				{
					this.OntypeUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._typeUtilisateur = value;
					this.SendPropertyChanged("typeUtilisateur");
					this.OntypeUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mot_de_passe", DbType="VarChar(150)")]
		public string mot_de_passe
		{
			get
			{
				return this._mot_de_passe;
			}
			set
			{
				if ((this._mot_de_passe != value))
				{
					this.Onmot_de_passeChanging(value);
					this.SendPropertyChanging();
					this._mot_de_passe = value;
					this.SendPropertyChanged("mot_de_passe");
					this.Onmot_de_passeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="VarChar(150)")]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_table", DbType="Int")]
		public System.Nullable<int> id_table
		{
			get
			{
				return this._id_table;
			}
			set
			{
				if ((this._id_table != value))
				{
					this.Onid_tableChanging(value);
					this.SendPropertyChanging();
					this._id_table = value;
					this.SendPropertyChanged("id_table");
					this.Onid_tableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_connexion", Storage="_connexions", ThisKey="id", OtherKey="id_utilisateur")]
		public EntitySet<connexion> connexions
		{
			get
			{
				return this._connexions;
			}
			set
			{
				this._connexions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_journal", Storage="_journals", ThisKey="id", OtherKey="id_utilisateur")]
		public EntitySet<journal> journals
		{
			get
			{
				return this._journals;
			}
			set
			{
				this._journals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utilisateur_message", Storage="_messages", ThisKey="id", OtherKey="de")]
		public EntitySet<message> messages
		{
			get
			{
				return this._messages;
			}
			set
			{
				this._messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_connexions(connexion entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = this;
		}
		
		private void detach_connexions(connexion entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = null;
		}
		
		private void attach_journals(journal entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = this;
		}
		
		private void detach_journals(journal entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = null;
		}
		
		private void attach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = this;
		}
		
		private void detach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.utilisateur = null;
		}
	}
}
#pragma warning restore 1591
